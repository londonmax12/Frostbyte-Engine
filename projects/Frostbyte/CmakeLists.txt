set(FROSTBYTE_SOURCES 
    src/Frostbyte.cpp
    src/Application/Application.cpp
    src/Application/EventDispatcher.cpp
    src/Application/IWindow.cpp
    src/Logging/Logging.cpp
    src/Scene/SceneGraph.cpp
    src/Scene/Layer.cpp
    src/Platform/IPlatform.cpp
    src/Platform/LinuxImpl/LinuxWindow.cpp
    src/Platform/LinuxImpl/LinuxPlatform.cpp
    src/Platform/WindowsImpl/WindowsWindow.cpp
    src/Platform/WindowsImpl/WindowsPlatform.cpp
    src/Platform/WindowsImpl/Vulkan/WindowsVulkanSurface.cpp
    src/Renderer/Renderer.cpp
    src/Renderer/VulkanImpl/VulkanRendererBackend.cpp
    src/Renderer/VulkanImpl/VulkanDevice.cpp
    src/Renderer/VulkanImpl/VulkanUtils.cpp
    src/Renderer/VulkanImpl/IVulkanSurface.cpp

    
    include/Frostbyte/Frostbyte.h
    include/Frostbyte/Application/Application.h
    include/Frostbyte/Application/EventDispatcher.h
    include/Frostbyte/Application/IWindow.h
    include/Frostbyte/Logging/Logging.h
    include/Frostbyte/Scene/SceneGraph.h
    include/Frostbyte/Scene/Layer.h
    include/Frostbyte/Math/Vector.h
    include/Frostbyte/Event/IEvent.h
    include/Frostbyte/Event/WindowEvents.h
    include/Frostbyte/Platform/PlatformDetection.h
    include/Frostbyte/Platform/IPlatform.h
    include/Frostbyte/Platform/WindowsImpl/WindowsWindow.h
    include/Frostbyte/Platform/WindowsImpl/WindowsPlatform.h
    include/Frostbyte/Platform/WindowsImpl/Vulkan/WindowsVulkanSurface.h
    include/Frostbyte/Platform/LinuxImpl/LinuxWindow.h
    include/Frostbyte/Platform/LinuxImpl/LinuxPlatform.h
    include/Frostbyte/Renderer/Renderer.h
    include/Frostbyte/Renderer/IRendererBackend.h
    include/Frostbyte/Renderer/VulkanImpl/VulkanRendererBackend.h
    include/Frostbyte/Renderer/VulkanImpl/VulkanDevice.h
    include/Frostbyte/Renderer/VulkanImpl/VulkanUtils.h
    include/Frostbyte/Renderer/VulkanImpl/VulkanStructs.h
    include/Frostbyte/Renderer/VulkanImpl/IVulkanSurface.h
)

source_group(TREE ${CMAKE_CURRENT_SOURCE_DIR} FILES ${FROSTBYTE_SOURCES})

add_library(Frostbyte-Engine STATIC ${FROSTBYTE_SOURCES})

target_include_directories(Frostbyte-Engine PUBLIC ${CMAKE_CURRENT_SOURCE_DIR}/include)

if(UNIX AND NOT APPLE)
    target_link_libraries(Frostbyte-Engine xcb X11 X11-xcb)
endif()

find_package(Vulkan REQUIRED)
target_link_libraries(Frostbyte-Engine Vulkan::Vulkan)
target_include_directories(Frostbyte-Engine PUBLIC ${Vulkan_INCLUDE_DIRS})